name: Commit Message and Branch Name Check

on:
  pull_request:
    branches:
      - "*" 

jobs:
  commit-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Get PR commit messages
        id: get_commits
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commits = await github.paginate(github.rest.pulls.listCommits, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            return { messages: commits.map(commit => commit.commit.message).join('\n') };

      - name: Validate commit messages
        env:
          COMMIT_MESSAGES: ${{ steps.get_commits.outputs.messages }}
        run: |
          #!/bin/bash
          commit_regex="^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?: .+"
          
          if [ -z "$COMMIT_MESSAGES" ]; then
            echo "No commit messages; check skipped."
            exit 0
          fi
          
          IFS=$'\n' read -rd '' -a messages <<< "$COMMIT_MESSAGES" || true
          
          for msg in "${messages[@]}"; do
            if [[ ! $msg =~ $commit_regex ]]; then
              echo "The '$msg' commit message does not conform to the required format."
              exit 1
            fi
          done
          
          echo "All commits message is valid"

  branch-name-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Validate branch name
        run: |
          #!/bin/bash
          branch_regex="^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)[-\/].+"
          branch_name="$GITHUB_HEAD_REF"
          if [[ ! $branch_name =~ $branch_regex ]]; then
            echo "Branch name '$branch_name' is not valid."
            exit 1
          fi
